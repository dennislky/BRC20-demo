{"version":3,"file":"static/js/759.30fdbdad.chunk.js","mappings":"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","sources":["components/CardActionButton.js","components/DemoDialog.js","features/initSDK.js"],"sourcesContent":["import { Button } from \"@mui/material\";\n\nconst CardActionButton = ({\n  buttonText,\n  onClick,\n  disabled = false,\n  testId = \"\",\n}) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n      onClick={onClick}\n      disabled={disabled}\n      data-testid={testId}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nexport { CardActionButton };\n","import {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\n\nconst DemoDialog = ({\n  title,\n  content,\n  closeButtonText = \"No\",\n  confirmButtonText = \"Yes\",\n  showDialog = false,\n  handleClose,\n  handleConfirm,\n}) => {\n  return (\n    <Dialog\n      open={showDialog}\n      onClose={handleClose || handleConfirm}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {handleClose && (\n          <Button onClick={handleClose}>{closeButtonText}</Button>\n        )}\n        <Button onClick={handleConfirm} autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport { DemoDialog };\n","import { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  TextField,\n} from \"@mui/material\";\n\nimport { CardActionButton } from \"../components/CardActionButton\";\nimport { DemoDialog } from \"../components/DemoDialog\";\nimport { useStore } from \"../stores\";\n\n// card per feature\nconst InitSDKCard = () => {\n  // local UI state\n  const [showDialog, setShowDialog] = useState(false);\n\n  // mobx store that link up with sdk wallets\n  const { appStore, walletStore } = useStore();\n  const { isInit } = walletStore;\n  const {\n    apiKey,\n    apiProjectId,\n    apiPassphrase,\n    apiSecretKey,\n    fromAddress,\n    toAddress,\n    walletId,\n    privateKey,\n  } = appStore;\n\n  // local UI state cleanup when sdk re-initialized\n  useEffect(() => {\n    setShowDialog(false);\n  }, [isInit]);\n\n  // event handler\n  const confirmDialog = () => {\n    walletStore.dispose();\n    appStore.dispose();\n    setShowDialog(false);\n  };\n  const closeDialog = () => {\n    setShowDialog(false);\n  };\n\n  // feature logic\n  const setupAPIKey = (event) => {\n    appStore.setAPIKey(event.target.value);\n  };\n  const setupAPIProjectId = (event) => {\n    appStore.setAPIProjectId(event.target.value);\n  };\n  const setupAPIPassphrase = (event) => {\n    appStore.setAPIPassphrase(event.target.value);\n  };\n  const setupAPISecretKey = (event) => {\n    appStore.setAPISecretKey(event.target.value);\n  };\n\n  const setupFromAddress = (event) => {\n    appStore.setFromAddress(event.target.value);\n  };\n  const setupToAddress = (event) => {\n    appStore.setToAddress(event.target.value);\n  };\n  const setupWalletId = (event) => {\n    appStore.setWalletId(event.target.value);\n  };\n  const setupPrivateKey = (event) => {\n    appStore.setPrivateKey(event.target.value);\n  };\n\n  const initSDK = () => {\n    walletStore.initialize();\n  };\n  const dispose = () => {\n    setShowDialog(true);\n  };\n\n  // render logic\n  return (\n    <>\n      <Card variant=\"outlined\" sx={{ minWidth: 275, borderRadius: 5 }}>\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 26 }}>\n            OKX Wallet SDK\n          </Typography>\n          {isInit && (\n            <Typography display=\"inline\" sx={{ fontSize: 14, color: \"blue\" }}>\n              {\" (Initialized)\"}\n            </Typography>\n          )}\n        </CardContent>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          <TextField\n            label=\"API Key\"\n            sx={{ pr: 1 }}\n            onChange={setupAPIKey}\n            value={apiKey}\n          />\n          <TextField\n            label=\"API Project ID\"\n            sx={{ pr: 1 }}\n            onChange={setupAPIProjectId}\n            value={apiProjectId}\n          />\n          <TextField\n            label=\"API Passphrase\"\n            sx={{ pr: 1 }}\n            onChange={setupAPIPassphrase}\n            type=\"password\"\n            value={apiPassphrase}\n          />\n          <TextField\n            label=\"API Secret Key\"\n            sx={{ pr: 1 }}\n            onChange={setupAPISecretKey}\n            type=\"password\"\n            value={apiSecretKey}\n          />\n        </CardActions>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          <TextField\n            label=\"From Address\"\n            sx={{ pr: 1 }}\n            onChange={setupFromAddress}\n            value={fromAddress}\n          />\n          <TextField\n            label=\"To Address\"\n            sx={{ pr: 1 }}\n            onChange={setupToAddress}\n            value={toAddress}\n          />\n          <TextField\n            label=\"Wallet ID\"\n            sx={{ pr: 1 }}\n            onChange={setupWalletId}\n            value={walletId}\n          />\n          <TextField\n            label=\"Private Key\"\n            sx={{ pr: 1 }}\n            onChange={setupPrivateKey}\n            type=\"password\"\n            value={privateKey}\n          />\n        </CardActions>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          {!isInit ? (\n            <CardActionButton\n              buttonText=\"Initialize\"\n              onClick={initSDK}\n              testId=\"initialize\"\n            />\n          ) : (\n            <CardActionButton\n              buttonText=\"Dispose\"\n              onClick={dispose}\n              testId=\"dispose\"\n            />\n          )}\n          {/* <CardActionButton buttonText=\"Github\" onClick={linkToGithub} /> */}\n          <Grid\n            container\n            spacing={1}\n            sx={{\n              ml: 1,\n              mt: 0,\n            }}\n          >\n            <iframe\n              src=\"https://ghbtns.com/github-btn.html?user=okx&repo=js-wallet-sdk-demo&type=star&count=true&size=large\"\n              frameBorder=\"0\"\n              width=\"170\"\n              height=\"30\"\n              title=\"GitHub\"\n            />\n          </Grid>\n        </CardActions>\n      </Card>\n      <DemoDialog\n        title={\"Are you sure?\"}\n        content={\"The Mnenomics and Private Keys generated will be lost!\"}\n        showDialog={showDialog}\n        handleClose={closeDialog}\n        handleConfirm={confirmDialog}\n      />\n    </>\n  );\n};\n\nexport default observer(InitSDKCard);\n"],"names":["CardActionButton","_ref","buttonText","onClick","disabled","testId","_jsx","Button","size","variant","sx","backgroundColor","borderRadius","children","DemoDialog","title","content","closeButtonText","confirmButtonText","showDialog","handleClose","handleConfirm","_jsxs","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","observer","InitSDKCard","setShowDialog","useState","appStore","walletStore","useStore","isInit","apiKey","apiProjectId","apiPassphrase","apiSecretKey","fromAddress","toAddress","walletId","privateKey","useEffect","_Fragment","Card","minWidth","CardContent","pb","Typography","display","fontSize","color","CardActions","pl","pr","TextField","label","onChange","event","setAPIKey","target","value","setAPIProjectId","setAPIPassphrase","type","setAPISecretKey","setFromAddress","setToAddress","setWalletId","setPrivateKey","dispose","initSDK","initialize","Grid","container","spacing","ml","mt","src","frameBorder","width","height","closeDialog","confirmDialog"],"sourceRoot":""}