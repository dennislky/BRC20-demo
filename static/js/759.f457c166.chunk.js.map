{"version":3,"file":"static/js/759.f457c166.chunk.js","mappings":"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","sources":["components/CardActionButton.js","components/DemoDialog.js","features/initSDK.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import { Button } from \"@mui/material\";\n\nconst CardActionButton = ({\n  buttonText,\n  onClick,\n  disabled = false,\n  testId = \"\",\n}) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n      onClick={onClick}\n      disabled={disabled}\n      data-testid={testId}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nexport { CardActionButton };\n","import {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\n\nconst DemoDialog = ({\n  title,\n  content,\n  closeButtonText = \"No\",\n  confirmButtonText = \"Yes\",\n  showDialog = false,\n  handleClose,\n  handleConfirm,\n}) => {\n  return (\n    <Dialog\n      open={showDialog}\n      onClose={handleClose || handleConfirm}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {handleClose && (\n          <Button onClick={handleClose}>{closeButtonText}</Button>\n        )}\n        <Button onClick={handleConfirm} autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport { DemoDialog };\n","import { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Grid,\n  TextField,\n  Link,\n} from \"@mui/material\";\n\nimport { CardActionButton } from \"../components/CardActionButton\";\nimport { DemoDialog } from \"../components/DemoDialog\";\nimport { useStore } from \"../stores\";\nimport { OKLINK_ADDRESS_PREFIX, OKX_BUILD_URL } from \"../constants\";\n\n// card per feature\nconst InitSDKCard = () => {\n  // local UI state\n  const [showDialog, setShowDialog] = useState(false);\n\n  // mobx store that link up with sdk wallets\n  const { appStore, walletStore } = useStore();\n  const { isInit } = walletStore;\n  const {\n    apiKey,\n    apiProjectId,\n    apiPassphrase,\n    apiSecretKey,\n    fromAddress,\n    // toAddress,\n    walletId,\n    privateKey,\n  } = appStore;\n\n  // local UI state cleanup when sdk re-initialized\n  useEffect(() => {\n    setShowDialog(false);\n  }, [isInit]);\n\n  // event handler\n  const confirmDialog = () => {\n    walletStore.dispose();\n    appStore.dispose();\n    setShowDialog(false);\n  };\n  const closeDialog = () => {\n    setShowDialog(false);\n  };\n\n  // feature logic\n  const setupAPIKey = (event) => {\n    appStore.setAPIKey(event.target.value);\n  };\n  const setupAPIProjectId = (event) => {\n    appStore.setAPIProjectId(event.target.value);\n  };\n  const setupAPIPassphrase = (event) => {\n    appStore.setAPIPassphrase(event.target.value);\n  };\n  const setupAPISecretKey = (event) => {\n    appStore.setAPISecretKey(event.target.value);\n  };\n\n  const setupFromAddress = (event) => {\n    appStore.setFromAddress(event.target.value);\n  };\n  // const setupToAddress = (event) => {\n  //   appStore.setToAddress(event.target.value);\n  // };\n  const setupWalletId = (event) => {\n    appStore.setWalletId(event.target.value);\n  };\n  const setupPrivateKey = (event) => {\n    appStore.setPrivateKey(event.target.value);\n  };\n\n  const initSDK = () => {\n    walletStore.initialize();\n  };\n  const dispose = () => {\n    setShowDialog(true);\n  };\n\n  // render logic\n  return (\n    <>\n      <Card variant=\"outlined\" sx={{ minWidth: 275, borderRadius: 5 }}>\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 26 }}>\n            Configurations\n          </Typography>\n          {isInit && (\n            <Typography display=\"inline\" sx={{ fontSize: 14, color: \"blue\" }}>\n              {\" (Initialized)\"}\n            </Typography>\n          )}\n        </CardContent>\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 16 }}>\n            OKX Build Configurations:{\" \"}\n          </Typography>\n          <Link href={OKX_BUILD_URL} target=\"_blank\" rel=\"noopener\">\n            {OKX_BUILD_URL}\n          </Link>\n        </CardContent>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          <TextField\n            label=\"API Key\"\n            sx={{ pr: 1 }}\n            onChange={setupAPIKey}\n            value={apiKey}\n          />\n          <TextField\n            label=\"API Project ID\"\n            sx={{ pr: 1 }}\n            onChange={setupAPIProjectId}\n            value={apiProjectId}\n          />\n          <TextField\n            label=\"API Passphrase\"\n            sx={{ pr: 1 }}\n            onChange={setupAPIPassphrase}\n            type=\"password\"\n            value={apiPassphrase}\n          />\n          <TextField\n            label=\"API Secret Key\"\n            sx={{ pr: 1 }}\n            onChange={setupAPISecretKey}\n            type=\"password\"\n            value={apiSecretKey}\n          />\n        </CardActions>\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 16 }}>\n            Wallet Import Configurations\n          </Typography>\n        </CardContent>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          <TextField\n            label=\"Wallet ID\"\n            sx={{ pr: 1 }}\n            onChange={setupWalletId}\n            value={walletId}\n            helperText=\"optional, if provided, please also provide corresponding API Key\"\n          />\n          <TextField\n            label=\"From Address\"\n            sx={{ pr: 1 }}\n            onChange={setupFromAddress}\n            value={fromAddress}\n          />\n          {/* <TextField\n            label=\"To Address\"\n            sx={{ pr: 1 }}\n            onChange={setupToAddress}\n            value={toAddress}\n          /> */}\n          <TextField\n            label=\"Private Key\"\n            sx={{ pr: 1 }}\n            onChange={setupPrivateKey}\n            type=\"password\"\n            value={privateKey}\n          />\n        </CardActions>\n        {fromAddress ? (\n          <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n            <Typography display=\"inline\" sx={{ fontSize: 16 }}>\n              Inscription List:{\" \"}\n            </Typography>\n            <Link\n              href={`${OKLINK_ADDRESS_PREFIX}${fromAddress}/inscription`}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {`${OKLINK_ADDRESS_PREFIX}/${fromAddress}/inscription`}\n            </Link>\n          </CardActions>\n        ) : null}\n        {/* {toAddress ? (\n          <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n            <Typography display=\"inline\" sx={{ fontSize: 16 }}>\n              To Address Inscription Link:{\" \"}\n            </Typography>\n            <Link\n              href={`${OKLINK_ADDRESS_PREFIX}/${toAddress}/inscription`}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {`${OKLINK_ADDRESS_PREFIX}/${toAddress}/inscription`}\n            </Link>\n          </CardActions>\n        ) : null} */}\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          {!isInit ? (\n            <CardActionButton\n              buttonText=\"Initialize\"\n              onClick={initSDK}\n              testId=\"initialize\"\n            />\n          ) : (\n            <CardActionButton\n              buttonText=\"Dispose\"\n              onClick={dispose}\n              testId=\"dispose\"\n            />\n          )}\n          {/* <CardActionButton buttonText=\"Github\" onClick={linkToGithub} /> */}\n          <Grid\n            container\n            spacing={1}\n            sx={{\n              ml: 1,\n              mt: 0,\n            }}\n          >\n            <iframe\n              src=\"https://ghbtns.com/github-btn.html?user=dennislky&repo=BRC20-Demo&type=star&count=true&size=large\"\n              frameBorder=\"0\"\n              width=\"170\"\n              height=\"30\"\n              title=\"GitHub\"\n            />\n          </Grid>\n        </CardActions>\n      </Card>\n      <DemoDialog\n        title={\"Are you sure?\"}\n        content={\"The Mnenomics and Private Keys generated will be lost!\"}\n        showDialog={showDialog}\n        handleClose={closeDialog}\n        handleConfirm={confirmDialog}\n      />\n    </>\n  );\n};\n\nexport default observer(InitSDKCard);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["CardActionButton","_ref","buttonText","onClick","disabled","testId","_jsx","Button","size","variant","sx","backgroundColor","borderRadius","children","DemoDialog","title","content","closeButtonText","confirmButtonText","showDialog","handleClose","handleConfirm","_jsxs","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","observer","InitSDKCard","setShowDialog","useState","appStore","walletStore","useStore","isInit","apiKey","apiProjectId","apiPassphrase","apiSecretKey","fromAddress","walletId","privateKey","useEffect","_Fragment","Card","minWidth","CardContent","pb","Typography","display","fontSize","color","Link","href","OKX_BUILD_URL","target","rel","CardActions","pl","pr","TextField","label","onChange","event","setAPIKey","value","setAPIProjectId","setAPIPassphrase","type","setAPISecretKey","setWalletId","helperText","setFromAddress","setPrivateKey","OKLINK_ADDRESS_PREFIX","dispose","initSDK","initialize","Grid","container","spacing","ml","mt","src","frameBorder","width","height","closeDialog","confirmDialog","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","name","overridesResolver","props","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}