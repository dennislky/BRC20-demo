{"version":3,"file":"static/js/233.9e8a082d.chunk.js","mappings":"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","sources":["components/CardActionButton.js","features/deployBRC20.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import { Button } from \"@mui/material\";\n\nconst CardActionButton = ({\n  buttonText,\n  onClick,\n  disabled = false,\n  testId = \"\",\n}) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n      onClick={onClick}\n      disabled={disabled}\n      data-testid={testId}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nexport { CardActionButton };\n","import { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  Alert,\n  AlertTitle,\n  Divider,\n  TextField,\n  Link,\n} from \"@mui/material\";\n\nimport { CardActionButton } from \"../components/CardActionButton\";\nimport { useStore } from \"../stores\";\nimport {\n  DEPLOY_BRC20_CODE_URL,\n  OKLINK_BRC20_LIST_URL,\n  OKLINK_TRANSACTION_PREFIX,\n} from \"../constants\";\n\n// card per feature\nconst DeployBRC20Card = () => {\n  // local UI state\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // mobx store that link up with sdk wallets\n  const { walletStore, appStore } = useStore();\n  const {\n    isInit,\n    chainsAvailable,\n    walletId,\n    tickName,\n    inscribeAddress,\n    deployAmount,\n    deployLimit,\n    deployOperations,\n  } = walletStore;\n  const { fromAddress, walletId: appStoreWalletId } = appStore;\n\n  // local UI state cleanup when sdk re-initialized\n  useEffect(() => {\n    setErrorMessage(\"\");\n  }, [isInit]);\n\n  // feature logic\n  const updateTickName = (event) => {\n    walletStore.setTickName(event.target.value);\n  };\n  const updateAddress = (event) => {\n    walletStore.setInscribeAddress(event.target.value);\n  };\n  const updateAmount = (event) => {\n    walletStore.setDeployAmount(event.target.value);\n  };\n  const updateLimit = (event) => {\n    walletStore.setDeployLimit(event.target.value);\n  };\n  const deployBRC20 = async () => {\n    try {\n      setErrorMessage(\"\");\n      await walletStore.deployBRC20();\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(err.toString());\n    }\n  };\n\n  // render logic\n  return isInit ? (\n    <>\n      <Card\n        variant=\"outlined\"\n        sx={{ minWidth: 275, borderRadius: 5 }}\n        key=\"deploy-brc20-card\"\n      >\n        <CardContent sx={{ pb: 1 }}>\n          <Typography sx={{ fontSize: 26 }}>Deploy BRC20</Typography>\n          <Typography display=\"inline\" sx={{ fontSize: 16 }}>\n            Code Reference:{\" \"}\n          </Typography>\n          <Link href={DEPLOY_BRC20_CODE_URL} target=\"_blank\" rel=\"noopener\">\n            {DEPLOY_BRC20_CODE_URL}\n          </Link>\n        </CardContent>\n        <Divider flexItem />\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 16 }}>\n            Please check if your proposed tick name already exists:{\" \"}\n          </Typography>\n          <Link href={OKLINK_BRC20_LIST_URL} target=\"_blank\" rel=\"noopener\">\n            {OKLINK_BRC20_LIST_URL}\n          </Link>\n        </CardContent>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          <TextField\n            label=\"Tick Name\"\n            sx={{ pr: 1 }}\n            onChange={updateTickName}\n            value={tickName}\n            helperText=\"4 alphanumeric characters\"\n          />\n          <TextField\n            label=\"Inscribe Address\"\n            sx={{ pr: 1 }}\n            onChange={updateAddress}\n            value={fromAddress || inscribeAddress}\n          />\n          <TextField\n            label=\"Deploy Amount\"\n            sx={{ pr: 1 }}\n            onChange={updateAmount}\n            type=\"number\"\n            value={deployAmount}\n          />\n          <TextField\n            label=\"Mint Limit\"\n            sx={{ pr: 1 }}\n            onChange={updateLimit}\n            type=\"number\"\n            value={deployLimit}\n          />\n          <CardActionButton\n            buttonText=\"Deploy\"\n            onClick={deployBRC20}\n            disabled={\n              !isInit ||\n              chainsAvailable?.length === 0 ||\n              (!walletId && !appStoreWalletId) ||\n              !tickName\n            }\n            testId=\"deploy-brc20\"\n          />\n        </CardActions>\n        {errorMessage && (\n          <Alert severity=\"error\">\n            <AlertTitle>Failure</AlertTitle>\n            {errorMessage}\n          </Alert>\n        )}\n        {deployOperations && Object.keys(deployOperations).length ? (\n          <Alert severity=\"success\">\n            <AlertTitle>Transactions</AlertTitle>\n            <div>{`Sign Info: ${JSON.stringify(\n              deployOperations.signInfo\n            )}`}</div>\n            {deployOperations.utxo && <br />}\n            {deployOperations.utxo && (\n              <div>{`UTXO: ${JSON.stringify(deployOperations.utxo)}`}</div>\n            )}\n            {deployOperations.op && <br />}\n            {deployOperations.op && (\n              <div>{`Operation: ${JSON.stringify(deployOperations.op)}`}</div>\n            )}\n            {deployOperations.inscribedTxs && <br />}\n            {deployOperations.inscribedTxs && (\n              <div>{`Inscribed Transactions: ${JSON.stringify(\n                deployOperations.inscribedTxs\n              )}`}</div>\n            )}\n            <br />\n            {deployOperations.txHashList &&\n              deployOperations.txHashList.map((tx, txIndex) => {\n                return (\n                  <div key={`tx-${txIndex}`}>\n                    <div>{`${tx.itemId} transaction link: `}</div>\n                    <Link\n                      href={`${OKLINK_TRANSACTION_PREFIX}${tx.txHash}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      {`${OKLINK_TRANSACTION_PREFIX}${tx.txHash}`}\n                    </Link>\n                    {txIndex < deployOperations.txHashList.length ? (\n                      <br />\n                    ) : null}\n                  </div>\n                );\n              })}\n          </Alert>\n        ) : null}\n      </Card>\n    </>\n  ) : null;\n};\n\nexport default observer(DeployBRC20Card);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["CardActionButton","_ref","buttonText","onClick","disabled","testId","_jsx","Button","size","variant","sx","backgroundColor","borderRadius","children","observer","DeployBRC20Card","errorMessage","setErrorMessage","useState","walletStore","appStore","useStore","isInit","chainsAvailable","walletId","tickName","inscribeAddress","deployAmount","deployLimit","deployOperations","fromAddress","appStoreWalletId","useEffect","_Fragment","_jsxs","Card","minWidth","CardContent","pb","Typography","fontSize","display","Link","href","DEPLOY_BRC20_CODE_URL","target","rel","Divider","flexItem","OKLINK_BRC20_LIST_URL","CardActions","pl","pr","TextField","label","onChange","event","setTickName","value","helperText","setInscribeAddress","setDeployAmount","type","setDeployLimit","async","deployBRC20","err","console","error","toString","length","Alert","severity","AlertTitle","Object","keys","JSON","stringify","signInfo","utxo","op","inscribedTxs","txHashList","map","tx","txIndex","itemId","OKLINK_TRANSACTION_PREFIX","txHash","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","name","overridesResolver","props","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","current","includes","Array","isArray"],"sourceRoot":""}